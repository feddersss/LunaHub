bG9jYWwgT3Jpb25MaWIgPSBsb2Fkc3RyaW5nKGdhbWU6SHR0cEdldCgoJ2h0dHBzOi8vcmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbS9zaGxleHdhcmUvT3Jpb24vbWFpbi9zb3VyY2UnKSkpKCkKbG9jYWwgV2luZG93ID0gT3Jpb25MaWI6TWFrZVdpbmRvdyh7TmFtZSA9ICJMdW5hIEh1YiIsIEhpZGVQcmVtaXVtID0gZmFsc2UsIFNhdmVDb25maWcgPSB0cnVlfSkKbG9jYWwgcGxheWVyID0gZ2FtZS5QbGF5ZXJzLkxvY2FsUGxheWVyCgogICAgbG9jYWwgcGxheWVyVGFiID0gV2luZG93Ok1ha2VUYWIoewogICAgICAgIE5hbWUgPSAiUGxheWVyIiwKICAgICAgICBJY29uID0gInJieGFzc2V0aWQ6Ly80NDgzMzQ1OTk4IiwKICAgICAgICBQcmVtaXVtT25seSA9IGZhbHNlCiAgICB9KQogICAgCiAgICAgIHBsYXllclRhYjpBZGRUb2dnbGUoewogICAgTmFtZSA9ICJOb2NsaXAiLAogICAgRGVmYXVsdCA9IGZhbHNlLAogICAgQ2FsbGJhY2sgPSBmdW5jdGlvbihWYWx1ZSkKICAgICAgIHByaW50KFZhbHVlKQogICAgZW5kICAgIAp9KQoKIGxvY2FsIGFjY2Vzc29yeSA9IFdpbmRvdzpNYWtlVGFiKHsKICAgICAgICBOYW1lID0gIkFjY2Vzc29yaWVzIiwKICAgICAgICBJY29uID0gInJieGFzc2V0aWQ6Ly80NDgzMzQ1OTk4IiwKICAgICAgICBQcmVtaXVtT25seSA9IGZhbHNlCiAgICB9KQoKYWNjZXNzb3J5OkFkZExhYmVsKCJUSElTIElTIENMSUVOVCBPTkxZIikKCmFjY2Vzc29yeTpBZGRCdXR0b24oewogICAgTmFtZSA9ICJIdW5uaWQgQ2hhaW4iLAogICAgQ2FsbGJhY2sgPSBmdW5jdGlvbigpCiAgICAgICAgICAgICAgbG9jYWwgY2hhaW4gPSBnYW1lLlJlcGxpY2F0ZWRTdG9yYWdlLkNoYWlucy5IdW5uaWRDaGFpbjpDbG9uZSgpCiAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgY2hhaW4uUGFyZW50ID0gcGxyCiAgICAgIGVuZCAgICAKfSkKCmFjY2Vzc29yeTpBZGRCdXR0b24oewogICAgTmFtZSA9ICJDcm9zcyBDaGFpbiIsCiAgICBDYWxsYmFjayA9IGZ1bmN0aW9uKCkKICAgICAgICAgICAgICBsb2NhbCBjaGFpbiA9IGdhbWUuUmVwbGljYXRlZFN0b3JhZ2UuQ2hhaW5zLkNyb3NzQ2hhaW46Q2xvbmUoKQogICAgICAgICAgICAgIGxvY2FsIHBsYXllciA9IGdhbWUuV29ya3NwYWNlOkZpbmRGaXJzdENoaWxkKHBsci5OYW1lKQogICAgICAgICAgICAgIAogICAgICAgICAgICAgIGNoYWluLlBhcmVudCA9IHBsYXllcgogICAgICBlbmQgICAgCn0pCgppZiBwbGF5ZXIuTmFtZSA9PSAiQWR2ZXJ0aXNlcjIwMjMiIHRoZW4KIGxvY2FsIHN0YWZmID0gV2luZG93Ok1ha2VUYWIoewogICAgICAgIE5hbWUgPSAiU3RhZmYiLAogICAgICAgIEljb24gPSAicmJ4YXNzZXRpZDovLzQ0ODMzNDU5OTgiLAogICAgICAgIFByZW1pdW1Pbmx5ID0gZmFsc2UKICAgIH0pCmVuZCAKCk9yaW9uTGliOkluaXQoKQ


